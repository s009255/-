2018-04-08
1.진행 상황
  -OpenCV:
    --예제를 이용하여 clustering을 구현함
    --흰색 배경이 결과에 악영향을 끼침
    --그래서 흰색 배경을 투명화 함.
    --하지만 투명화한 이미지를 OpenCV로 read해보면, 다시 흰색으로 돌아감
    --그래서 아땋게든 투명을 어떻게 표현할까를 고민
    --OpenCV는 기본적으로 read시 BGR형태로 읽음, 이를 BGR + α의 형태로 읽기가 가능함.
    --α값에 따라 투명 여부가 결정된다. α가 0이면 투명이고 255일 경우 투명하지 않은 이미지를 의미.
    --그런데 분명 투명이지를 read할 시에 α값을 0으로 읽어오지만, 이를 OpenCV 자체에서는 α값을 표현해줄 뿐 처리를 하지는 않음.
    --그래서 투명이지를 투명하다고 읽고 저장은 하나, clustering시에 α값이 처리되지 않으니 기본 흰색으로 표현됨.
    --다른 방법으로 접근을 하기 위하여 흰색 pixel을 제거하는 방향으로 생각을 해봄.
    --기본적으로 이미지를 read할 때는 numpy.array형태에 저장하여 읽음
    --흰색의 값이 RGB [255 255 255]를 가지니 베열에 해당하는 값을 삭제시키는 것을 시도
    --기본적으로 제공하는 array delete는 array에서 index값을 이용하여 제거하지 value값으로 제거하지 않음
    --그럼 해당 배열에 위 value를 찾는 함수인 argwhere을 이용하여 찾으려 했으나, 찾는 value 자체가 array 형태라 적용이 되지 않음.
  
2.앞으로 해야할 것.
  -OpenCV:
    --그러면 흰색이 많을 경우는 clustering 계수를 1개 늘려서 흰색을 배제하고 진행을 해보는 식이 방안1.
    --아니면 다시 특정 array형태의 value를 지울 수 있는 코드를 짜보는 것이 방안2.
    --아니면 새로운 방안에 대하여 사이트에 질의를 해본다.
    
  -OpenCV 이후:
    --만약 위 RGB clustering이 완성 된다면 우선 각각의 비중을 저장.
    --같은 계열의 색도 색별로 RGB value가 다를 것이므로 유사도를 측정하는 library를 찾아 봐야 함.
    --색상별로 분위기와 각 영화의 장르 및 분위기를 어떻게 연관 지을 것인가.
   
 