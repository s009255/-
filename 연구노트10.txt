2018-05-02
1.진행 상황
-OpenCV
  --투명화 이미지 처리를 위하여 for문으로 각 pixel 값을 확인하여 완전 흰색 이미지를 제외하고 새로운 numpy에 값을 추가하는 것을 시도.
    시도해본 결과 속도가 매우 느려서 사용하기 실용성이 없어 보임.
  --투명화를 표현하는 알파값을 clustering에서 처리할 수 없을까를 고민.
    clustering은 함수를 이용하기 때문에 기본적으로 RGB값만을 사용하여 처리하는데, 함수 자체를 바꿀 수는 없을 것으로 판단.
  --그래서 시도한 것은 완전한 흰색의 경우 RGB값이 255/255/255값을 가진다. 그러므로 흰색 배경이 일정 이상일 경우 clustering 결과에
    값이 255에 매우 가깝게 나올 것이므로 특정 값 이상은 clustering 결과에서 제외하고 출력하도록 설정. 
  
2.졸업 논문 미팅
-OpenCV
  --일단 이 방식으로 투명화 처리를 진행하기로 결정
  --그러면 같은 k-means clustering을 시도할 때, 흰색 배경이 있는 것과 없는 것 같은 k값에 일정한 출력 결과가 나오도록 하는 것을 요구하심.
  --clustering 결과 값을 출력할 때, 이미지 형태의 bar는 파일로 저장하고, 각 색상의 RGB값과 비중은 따로 결과로 저장해서 데이터화 해야 할 것.
  --그리고 앞으로 데이터화 된 값은 색상 비교를 통하여 결과 도출을 할 것임. 하지만 영화의 경우 한 영화에 여러 장르가 섞여 있는 경우가 대다수
    그러니 각 기준점을 장르 중 상당부분 분위기가 상반되는 것들로 잡아야 할 것임.
  
3. 목표
-일단 다음 주까지 같은 k값에 같은 수의 색상의 결과 출력과 파일 형태로의 저장까지 완성을 해오고, 두 색상을 비교하는 library나 코드에 대하여 알아 올 것.